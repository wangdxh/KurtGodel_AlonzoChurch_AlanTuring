type TestA struct {
	Id int
	X  string
}
type TestB struct {
	Id int
	X  string
}
type TestC struct {
	Id int
	X  string
}

type Testresult struct {
	TestA
	TestB
	TestC
}
 
type TestBMerge struct {
	unique `unique: "TestB.Id == TestB.Id"`
	TestB  `assign:"TestB"`
	C     []TestC `unique:"Id == TestC.Id" assign:"TestC" `
}

type TestMerge struct {	
	unique  `unique:"TestA.Id==TestA.Id"`
	TestA `assign:"TestA"`
	B     []TestBMerge
	Xlist []string `unique:"self == TestC.X" assign:"TestC.X"`
}

func merge(input []Testresult) []TestMerge



