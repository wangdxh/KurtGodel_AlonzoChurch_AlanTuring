// Code generated from ./g4/GOTYPES.g4 by ANTLR 4.7.1. DO NOT EDIT.

package gotypes

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 20, 134,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 3, 2,
	3, 2, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 3, 4, 3, 4, 3, 5, 3, 5, 3, 6, 3, 6,
	3, 6, 3, 6, 3, 6, 3, 7, 3, 7, 3, 7, 3, 7, 3, 7, 3, 7, 3, 7, 3, 8, 3, 8,
	3, 9, 3, 9, 3, 10, 3, 10, 3, 11, 3, 11, 3, 12, 3, 12, 3, 13, 3, 13, 3,
	13, 3, 14, 3, 14, 3, 14, 3, 14, 3, 15, 3, 15, 3, 15, 7, 15, 89, 10, 15,
	12, 15, 14, 15, 92, 11, 15, 3, 15, 3, 15, 3, 16, 3, 16, 3, 17, 3, 17, 3,
	17, 3, 17, 5, 17, 102, 10, 17, 3, 18, 3, 18, 3, 19, 3, 19, 3, 20, 3, 20,
	3, 20, 7, 20, 111, 10, 20, 12, 20, 14, 20, 114, 11, 20, 3, 21, 5, 21, 117,
	10, 21, 3, 21, 3, 21, 3, 22, 3, 22, 3, 22, 3, 22, 7, 22, 125, 10, 22, 12,
	22, 14, 22, 128, 11, 22, 3, 22, 3, 22, 3, 22, 3, 22, 3, 22, 3, 126, 2,
	23, 3, 3, 5, 4, 7, 5, 9, 6, 11, 7, 13, 8, 15, 9, 17, 10, 19, 11, 21, 12,
	23, 13, 25, 14, 27, 15, 29, 16, 31, 17, 33, 2, 35, 2, 37, 2, 39, 18, 41,
	19, 43, 20, 3, 2, 7, 5, 2, 11, 12, 14, 15, 34, 34, 4, 2, 36, 36, 94, 94,
	8, 2, 36, 36, 100, 100, 104, 104, 112, 112, 116, 116, 118, 118, 15, 2,
	38, 38, 47, 47, 67, 92, 97, 97, 99, 124, 194, 216, 218, 248, 250, 8193,
	12354, 12689, 13058, 13185, 13314, 15663, 19970, 40961, 63746, 64257, 18,
	2, 47, 47, 50, 59, 1634, 1643, 1778, 1787, 2408, 2417, 2536, 2545, 2664,
	2673, 2792, 2801, 2920, 2929, 3049, 3057, 3176, 3185, 3304, 3313, 3432,
	3441, 3666, 3675, 3794, 3803, 4162, 4171, 2, 138, 2, 3, 3, 2, 2, 2, 2,
	5, 3, 2, 2, 2, 2, 7, 3, 2, 2, 2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2, 2, 2, 2,
	13, 3, 2, 2, 2, 2, 15, 3, 2, 2, 2, 2, 17, 3, 2, 2, 2, 2, 19, 3, 2, 2, 2,
	2, 21, 3, 2, 2, 2, 2, 23, 3, 2, 2, 2, 2, 25, 3, 2, 2, 2, 2, 27, 3, 2, 2,
	2, 2, 29, 3, 2, 2, 2, 2, 31, 3, 2, 2, 2, 2, 39, 3, 2, 2, 2, 2, 41, 3, 2,
	2, 2, 2, 43, 3, 2, 2, 2, 3, 45, 3, 2, 2, 2, 5, 50, 3, 2, 2, 2, 7, 52, 3,
	2, 2, 2, 9, 54, 3, 2, 2, 2, 11, 56, 3, 2, 2, 2, 13, 61, 3, 2, 2, 2, 15,
	68, 3, 2, 2, 2, 17, 70, 3, 2, 2, 2, 19, 72, 3, 2, 2, 2, 21, 74, 3, 2, 2,
	2, 23, 76, 3, 2, 2, 2, 25, 78, 3, 2, 2, 2, 27, 81, 3, 2, 2, 2, 29, 85,
	3, 2, 2, 2, 31, 95, 3, 2, 2, 2, 33, 97, 3, 2, 2, 2, 35, 103, 3, 2, 2, 2,
	37, 105, 3, 2, 2, 2, 39, 107, 3, 2, 2, 2, 41, 116, 3, 2, 2, 2, 43, 120,
	3, 2, 2, 2, 45, 46, 7, 104, 2, 2, 46, 47, 7, 119, 2, 2, 47, 48, 7, 112,
	2, 2, 48, 49, 7, 101, 2, 2, 49, 4, 3, 2, 2, 2, 50, 51, 7, 42, 2, 2, 51,
	6, 3, 2, 2, 2, 52, 53, 7, 46, 2, 2, 53, 8, 3, 2, 2, 2, 54, 55, 7, 43, 2,
	2, 55, 10, 3, 2, 2, 2, 56, 57, 7, 118, 2, 2, 57, 58, 7, 123, 2, 2, 58,
	59, 7, 114, 2, 2, 59, 60, 7, 103, 2, 2, 60, 12, 3, 2, 2, 2, 61, 62, 7,
	117, 2, 2, 62, 63, 7, 118, 2, 2, 63, 64, 7, 116, 2, 2, 64, 65, 7, 119,
	2, 2, 65, 66, 7, 101, 2, 2, 66, 67, 7, 118, 2, 2, 67, 14, 3, 2, 2, 2, 68,
	69, 7, 125, 2, 2, 69, 16, 3, 2, 2, 2, 70, 71, 7, 127, 2, 2, 71, 18, 3,
	2, 2, 2, 72, 73, 7, 98, 2, 2, 73, 20, 3, 2, 2, 2, 74, 75, 7, 60, 2, 2,
	75, 22, 3, 2, 2, 2, 76, 77, 7, 44, 2, 2, 77, 24, 3, 2, 2, 2, 78, 79, 7,
	93, 2, 2, 79, 80, 7, 95, 2, 2, 80, 26, 3, 2, 2, 2, 81, 82, 9, 2, 2, 2,
	82, 83, 3, 2, 2, 2, 83, 84, 8, 14, 2, 2, 84, 28, 3, 2, 2, 2, 85, 90, 7,
	36, 2, 2, 86, 89, 5, 33, 17, 2, 87, 89, 10, 3, 2, 2, 88, 86, 3, 2, 2, 2,
	88, 87, 3, 2, 2, 2, 89, 92, 3, 2, 2, 2, 90, 88, 3, 2, 2, 2, 90, 91, 3,
	2, 2, 2, 91, 93, 3, 2, 2, 2, 92, 90, 3, 2, 2, 2, 93, 94, 7, 36, 2, 2, 94,
	30, 3, 2, 2, 2, 95, 96, 7, 41, 2, 2, 96, 32, 3, 2, 2, 2, 97, 101, 7, 94,
	2, 2, 98, 102, 9, 4, 2, 2, 99, 102, 5, 31, 16, 2, 100, 102, 7, 94, 2, 2,
	101, 98, 3, 2, 2, 2, 101, 99, 3, 2, 2, 2, 101, 100, 3, 2, 2, 2, 102, 34,
	3, 2, 2, 2, 103, 104, 9, 5, 2, 2, 104, 36, 3, 2, 2, 2, 105, 106, 9, 6,
	2, 2, 106, 38, 3, 2, 2, 2, 107, 112, 5, 35, 18, 2, 108, 111, 5, 35, 18,
	2, 109, 111, 5, 37, 19, 2, 110, 108, 3, 2, 2, 2, 110, 109, 3, 2, 2, 2,
	111, 114, 3, 2, 2, 2, 112, 110, 3, 2, 2, 2, 112, 113, 3, 2, 2, 2, 113,
	40, 3, 2, 2, 2, 114, 112, 3, 2, 2, 2, 115, 117, 7, 15, 2, 2, 116, 115,
	3, 2, 2, 2, 116, 117, 3, 2, 2, 2, 117, 118, 3, 2, 2, 2, 118, 119, 7, 12,
	2, 2, 119, 42, 3, 2, 2, 2, 120, 121, 7, 49, 2, 2, 121, 122, 7, 44, 2, 2,
	122, 126, 3, 2, 2, 2, 123, 125, 11, 2, 2, 2, 124, 123, 3, 2, 2, 2, 125,
	128, 3, 2, 2, 2, 126, 127, 3, 2, 2, 2, 126, 124, 3, 2, 2, 2, 127, 129,
	3, 2, 2, 2, 128, 126, 3, 2, 2, 2, 129, 130, 7, 44, 2, 2, 130, 131, 7, 49,
	2, 2, 131, 132, 3, 2, 2, 2, 132, 133, 8, 22, 2, 2, 133, 44, 3, 2, 2, 2,
	10, 2, 88, 90, 101, 110, 112, 116, 126, 3, 8, 2, 2,
}

var lexerDeserializer = antlr.NewATNDeserializer(nil)
var lexerAtn = lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "'func'", "'('", "','", "')'", "'type'", "'struct'", "'{'", "'}'",
	"'`'", "':'", "'*'", "", "", "", "'''",
}

var lexerSymbolicNames = []string{
	"", "", "", "", "", "", "", "", "", "", "", "POINTER", "BRACKETS", "WS",
	"CSTRING", "APOSTROPHE", "IDENTIFIER", "NEWLINE", "COMMENT",
}

var lexerRuleNames = []string{
	"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
	"T__9", "POINTER", "BRACKETS", "WS", "CSTRING", "APOSTROPHE", "EscapeSequence",
	"LETTER", "JavaIDDigit", "IDENTIFIER", "NEWLINE", "COMMENT",
}

type GOTYPESLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var lexerDecisionToDFA = make([]*antlr.DFA, len(lexerAtn.DecisionToState))

func init() {
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
}

func NewGOTYPESLexer(input antlr.CharStream) *GOTYPESLexer {

	l := new(GOTYPESLexer)

	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "GOTYPES.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// GOTYPESLexer tokens.
const (
	GOTYPESLexerT__0       = 1
	GOTYPESLexerT__1       = 2
	GOTYPESLexerT__2       = 3
	GOTYPESLexerT__3       = 4
	GOTYPESLexerT__4       = 5
	GOTYPESLexerT__5       = 6
	GOTYPESLexerT__6       = 7
	GOTYPESLexerT__7       = 8
	GOTYPESLexerT__8       = 9
	GOTYPESLexerT__9       = 10
	GOTYPESLexerPOINTER    = 11
	GOTYPESLexerBRACKETS   = 12
	GOTYPESLexerWS         = 13
	GOTYPESLexerCSTRING    = 14
	GOTYPESLexerAPOSTROPHE = 15
	GOTYPESLexerIDENTIFIER = 16
	GOTYPESLexerNEWLINE    = 17
	GOTYPESLexerCOMMENT    = 18
)
